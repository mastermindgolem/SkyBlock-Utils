plugins {
	id "net.minecraftforge.gradle.forge" version "41dfce0a70"
	id "com.github.johnrengelman.shadow" version "6.1.0"
	id "org.spongepowered.mixin" version "0.6-SNAPSHOT"
	id "java"
	id "application"
	id "signing"
}
project.setProperty("mainClassName", "com.golem.skyblockutils.Main")


version = "1.0.4.Beta.2"
group = "com.golem.skyblockutils"
archivesBaseName = "SkyblockUtils"

sourceCompatibility = targetCompatibility = 1.8
compileJava.options.encoding = 'UTF-8'

sourceSets {
	main({ output.resourcesDir = java.outputDir })
}

minecraft {
	version = "1.8.9-11.15.1.2318-1.8.9"
	runDir = "run"
	mappings = "stable_22"
	makeObfSourceJar = false
	replace "@VERSION@": project.version
	clientRunArgs += ["--tweakClass gg.essential.loader.stage0.EssentialSetupTweaker", "--mixin mixins.skyblockutils.json"]
}

repositories {
	mavenCentral()
	maven { url "https://jitpack.io" }
	maven { url "https://repo.spongepowered.org/repository/maven-public/" }
	maven { url "https://repo.sk1er.club/repository/maven-public" }
	maven { url "https://repo.sk1er.club/repository/maven-releases/" }
}

configurations {
	packageLib
	configurations.implementation.extendsFrom(configurations.packageLib)
}


dependencies {
	compileOnly 'org.projectlombok:lombok:1.18.26'
	annotationProcessor 'org.projectlombok:lombok:1.18.26'
	testCompileOnly 'org.projectlombok:lombok:1.18.26'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.26'
	// Backend
	packageLib "javax.websocket:javax.websocket-api:1.1"
	packageLib "org.java-websocket:Java-WebSocket:1.5.1"
	// Mixins
	annotationProcessor "org.spongepowered:mixin:0.7.11-SNAPSHOT"
	implementation "org.spongepowered:mixin:0.7.11-SNAPSHOT"
	// Essential gui
	implementation "gg.essential:loader-launchwrapper:1.1.3"
	implementation "gg.essential:essential-1.8.9-forge:2666"
	// Discord
	implementation "org.javacord:javacord:3.8.0"
	// Inc Tests
	testImplementation "junit:junit:4.13.2"
	// Logger
	implementation "com.github.VlxtIykg:Logger:1.1.0"


}

mixin {
	disableRefMapWarning = true
	defaultObfuscationEnv searge
	add sourceSets.main, "mixins.skyblockutils.refmap.json"
}

jar {

	duplicatesStrategy = DuplicatesStrategy.EXCLUDE

	manifest.attributes(
			"FMLCorePluginContainsFMLMod": true,
			"FMLCorePlugin": "com.golem.skyblockutils.injection.FMLPlugin",
			"ForceLoadAsMod": true,
			"MixinConfigs": "mixins.skyblockutils.json",
			"ModSide": "CLIENT",
			"TweakClass": "gg.essential.loader.stage0.EssentialSetupTweaker",
			"TweakOrder": "0"
	)

	enabled = false
}

shadowJar {

	dependencies {
		include(dependency("gg.essential:loader-launchwrapper:1.1.3"))
		include(dependency("net.objecthunter:exp4j:0.4.8"))
		include(dependency("com.github.VlxtIykg:Logger:1.1.0"))
	}

	archiveFileName = project.archivesBaseName + "-" + project.version + ".jar"
	println(archiveFileName)
}


reobf {
	shadowJar {
		classpath = sourceSets.main.compileClasspath
		mappingType = 'SEARGE'
	}
}

processResources {
	inputs.property "mcversion", project.minecraft.version
	from(sourceSets.main.resources.srcDirs) {
		include 'mcmod.info'
		expand 'version':project.version, 'mcversion':project.minecraft.version
	}
	from(sourceSets.main.resources.srcDirs) {
		exclude 'mcmod.info'
	}
	from(file("LICENSE"))
}


tasks.reobfJar.dependsOn(shadowJar)
sourceSets { main({ output.resourcesDir = java.classesDirectory }) }